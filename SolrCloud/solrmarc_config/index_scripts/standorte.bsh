import org.marc4j.marc.Record;
import org.marc4j.marc.ControlField;
import org.marc4j.marc.Subfield;
import org.marc4j.marc.DataField;
import org.solrmarc.tools.Utils;

import org.apache.log4j.Logger;


org.solrmarc.index.SolrIndexer indexer = null;
protected static Logger logger = Logger.getLogger(Utils.class.getName());

/**
 * Standort-Code aus Abrufzeichen in 954$y extrahieren
 *
 * @param  Record          record
 * @return Set     format of record
 */
public Set getStandort(Record record){
    Set result = new LinkedHashSet();
    String location = "";

    List holdings = record.getVariableFields("980");
    Iterator fieldsIter = holdings.iterator();
    if (holdings != null) {
        DataField holdingField;
        while(fieldsIter.hasNext()) {
             String holding = "";
             holdingField = (DataField) fieldsIter.next();
             if (holdingField != null) {
                 if (holdingField.getSubfield('2') != null) {
                     holding = holdingField.getSubfield('2').getData();
                 }
                 if (holdingField.getSubfield('y') != null) {
                     location = holdingField.getSubfield('y').getData();
                     if (location.length() >= 2) {
                         holding = holding + ":" + location.charAt(1);
                     }
                 }
                 result.add(holding);
             }
        }
    }
    return result;
}

public Set getSelectKey(Record record) {
    Set result = new LinkedHashSet();
    String location = "";

    List holdings = record.getVariableFields("980");
    Iterator fieldsIter = holdings.iterator();
    if (holdings != null) {
        DataField holdingField;
        while(fieldsIter.hasNext()) {
             String holding = "";
             holdingField = (DataField) fieldsIter.next();
             if (holdingField != null) {
                 if (holdingField.getSubfield('2') != null) {
                     holding = holdingField.getSubfield('2').getData();
                 }
                 if (holdingField.getSubfield('y') != null) {
                     location = holdingField.getSubfield('y').getData();
                     if (location.length() >= 1) {
                         holding = holding + ":" + location.charAt(0);
                     }
                 }
                 result.add(holding);
             }
        }
    }
    return result;
}

public Set getAusleihindikator(Record record) {
    Set result = new LinkedHashSet();
    String location = "";

    List holdings = record.getVariableFields("980");
    Iterator fieldsIter = holdings.iterator();
    if (holdings != null) {
        DataField holdingField;
        while(fieldsIter.hasNext()) {
             String holding = "";
             holdingField = (DataField) fieldsIter.next();
             if (holdingField != null) {
                 if (holdingField.getSubfield('2') != null) {
                     holding = holdingField.getSubfield('2').getData();
                 }
                 if (holdingField.getSubfield('e') != null) {
                     location = holdingField.getSubfield('e').getData();
                     holding = holding + ":" + location.charAt(0);
                 }
                 result.add(holding);
             }
        }
    }
    return result;
}

public Set getSignaturILN(Record record, String firstonly) {
    Set result = new LinkedHashSet();
    String location = "";

    List holdings = record.getVariableFields("980");
    Iterator fieldsIter = holdings.iterator();
    if (holdings != null) {
        DataField holdingField;
        while(fieldsIter.hasNext()) {
             String holding = "";
             holdingField = (DataField) fieldsIter.next();
             if (holdingField != null) {
                 List sigs = holdingField.getSubfields('d');
                 Iterator i = sigs.iterator();
                 while (i.hasNext()) {
                     Subfield sig = (Subfield)i.next();
                     location = sig.getData();
                     if (holdingField.getSubfield('2') != null) {
                         holding = holdingField.getSubfield('2').getData();
                         ilnsig = holding + ":" + location;
                         result.add(ilnsig);
                     }
                     if (holdingField.getSubfield('x') != null) {
                         holding = holdingField.getSubfield('x').getData();
                         ilnsig = holding + ":" + location;
                         result.add(ilnsig);
                     }
                     if (firstonly.equals("true")) break;
                 }
             }
        }
    }
    return result;
}

public Set getSigOrLoc(Record record, String which) {
    Set result = new LinkedHashSet();
    String iln = "";
    
    List holdings = record.getVariableFields("980");
    for (DataField holdingField : holdings) {
        iln = "";
        if (holdingField.getSubfield('2') != null) {
            iln = holdingField.getSubfield('2').getData();
            List cs = holdingField.getSubfields('c');
            List fs = holdingField.getSubfields('f');
            List ds = holdingField.getSubfields('d');
            if (cs.size().intValue() == ds.size().intValue() && cs.size().intValue() == fs.size().intValue()) {
                for (int i = 0; i < cs.size(); i++) {
                    if (which.equals("first_sig")) {
                        if (i == 0 && !ds.get(i).getData().equals("--%%--")) {
                            result.add(iln + ":" + ds.get(i).getData());
                            if (holdingField.getSubfield('x') != null) {
                                result.add(holdingField.getSubfield('x').getData() + ":" + ds.get(i).getData());
                            }
                        } 
                    } else if (which.equals("first_loc")) {
                        if (i == 0) {
                            result.add(iln + ":" + fs.get(i).getData());
                            if (holdingField.getSubfield('x') != null) {
                                result.add(holdingField.getSubfield('x').getData() + ":" + fs.get(i).getData());
                            }
                        } 
                    } else if (which.equals("other_sig")) {
                        if (i != 0 && !ds.get(i).getData().equals("--%%--")) {
                            result.add(iln + ":" + cs.get(i).getData() + "@" + ds.get(i).getData());
                            if (holdingField.getSubfield('x') != null) {
                                result.add(holdingField.getSubfield('x').getData() + ":" + cs.get(i).getData() + "@" + ds.get(i).getData());
                            }
                        }
                    } else if (which.equals("other_loc")) {
                        if (i != 0 && !fs.get(i).getData().equals("--%%--")) {
                            result.add(iln + ":" + cs.get(i).getData() + "@" + fs.get(i).getData());
                            if (holdingField.getSubfield('x') != null) {
                                result.add(holdingField.getSubfield('x').getData() + ":" + cs.get(i).getData() + "@" + fs.get(i).getData());
                            }
                        }
                    } else if (which.equals("all_loc")) {
                        result.add(iln + ":" + fs.get(i).getData());
                        if (holdingField.getSubfield('x') != null) {
                            result.add(holdingField.getSubfield('x').getData() + ":" + fs.get(i).getData());
                        }                         
                    } else {
                        result.add(iln + ":" + ds.get(i).getData());
                        if (holdingField.getSubfield('x') != null) {
                            result.add(holdingField.getSubfield('x').getData() + ":" + ds.get(i).getData());
                        }
                    }
                }
            } else {
                logger.error(iln + ": number of $c $d $f does not match in 980, Cannot parse this 980.");
            }
        }
    }
    
    return result;
}

public Set getClassILN(Record record){
    Set result = new LinkedHashSet();
    String cl = "";

    List holdings = record.getVariableFields("983");
    Iterator fieldsIter = holdings.iterator();
    if (holdings != null) {
        DataField holdingField;
        while(fieldsIter.hasNext()) {
             String holding = "";
             holdingField = (DataField) fieldsIter.next();

             if (holdingField != null) {
                 if (holdingField.getSubfield('b') != null) {
                     cl = holdingField.getSubfield('b').getData();
                 }
                 else if (holdingField.getSubfield('a') != null) {
                     cl = holdingField.getSubfield('a').getData();
                 }
                 if (holdingField.getSubfield('2') != null) {
                     holding = holdingField.getSubfield('2').getData();
                     result.add(holding + ":" + cl);
                 }
                 if (holdingField.getSubfield('x') != null) {
                     sigel = holdingField.getSubfield('x').getData();
                     result.add(sigel + ":" + cl);
                 }
                 cl = "";
             }
        }
    }
    List holdings = record.getVariableFields("936");
    Iterator fieldsIter = holdings.iterator();
    if (holdings != null) {
        DataField holdingField;
        while(fieldsIter.hasNext()) {
             String holding = "";
             holdingField = (DataField) fieldsIter.next();

             if (holdingField != null) {
                 if (holdingField.getSubfield('2') != null) {
                     holding = holdingField.getSubfield('2').getData();
                     if (holdingField.getSubfield('a') != null) {
                         cl = holdingField.getSubfield('a').getData();
                     }
                     result.add(holding + ":" + cl);
                     cl = "";
                 }
             }
        }
    }

    return result;
}

public Set getClassNotationILN(Record record){
    Set result = new LinkedHashSet();
    String cl = "";

    List holdings = record.getVariableFields("983");
    Iterator fieldsIter = holdings.iterator();
    if (holdings != null) {
        DataField holdingField;
        while(fieldsIter.hasNext()) {
             String holding = "";
             holdingField = (DataField) fieldsIter.next();

             if (holdingField != null) {
                 if (holdingField.getSubfield('a') != null) {
                     cl = holdingField.getSubfield('a').getData();
                 }
                 if (holdingField.getSubfield('2') != null) {
                     holding = holdingField.getSubfield('2').getData();
                     result.add(holding + ":" + cl);
                 }
                 if (holdingField.getSubfield('x') != null) {
                     sigel = holdingField.getSubfield('x').getData();
                     result.add(sigel + ":" + cl);
                 }
                 cl = "";
             }
        }
    }
    return result;
}

public Set getClassNameILN(Record record){
    Set result = new LinkedHashSet();
    String cl = "";

    List holdings = record.getVariableFields("983");
    Iterator fieldsIter = holdings.iterator();
    if (holdings != null) {
        DataField holdingField;
        while(fieldsIter.hasNext()) {
             String holding = "";
             holdingField = (DataField) fieldsIter.next();

             if (holdingField != null) {
                 if (holdingField.getSubfield('b') != null) {
                     cl = holdingField.getSubfield('b').getData();
                 }
                 if (holdingField.getSubfield('2') != null) {
                     holding = holdingField.getSubfield('2').getData();
                     result.add(holding + ":" + cl);
                 }
                 if (holdingField.getSubfield('x') != null) {
                     sigel = holdingField.getSubfield('x').getData();
                     result.add(sigel + ":" + cl);
                 }
                 cl = "";
             }
        }
    }
    return result;
}

public Set getStandortILN(Record record){
    Set result = new LinkedHashSet();
    String cl = "";

    List holdings = record.getVariableFields("980");
    Iterator fieldsIter = holdings.iterator();
    if (holdings != null) {
        DataField holdingField;
        while(fieldsIter.hasNext()) {
             String holding = "";
             holdingField = (DataField) fieldsIter.next();

             if (holdingField != null) {
                 if (holdingField.getSubfield('2') != null) {
                     iln = holdingField.getSubfield('2').getData();
                 }
                 for (Subfield standort : holdingField.getSubfields('f')) {
                     cl = standort.getData();
                     result.add(iln + ":" + cl);
                 }
                 cl = "";
             }
        }
    }
    return result;
}

public Set getSchlagworteILN(Record record){
    Set result = new LinkedHashSet();
    String cl = "";

    List holdings = record.getVariableFields("982");
    Iterator fieldsIter = holdings.iterator();
    if (holdings != null) {
        DataField holdingField;
        while(fieldsIter.hasNext()) {
             String holding = "";
             holdingField = (DataField) fieldsIter.next();

             if (holdingField != null) {
                 if (holdingField.getSubfield('a') != null) {
                     cl = holdingField.getSubfield('a').getData();
                 }
                 if (holdingField.getSubfield('2') != null) {
                     holding = holdingField.getSubfield('2').getData();
                     result.add(holding + ":" + cl);
                 }
                 if (holdingField.getSubfield('x') != null) {
                     sigel = holdingField.getSubfield('x').getData();
                     result.add(sigel + ":" + cl);
                 }
                 cl = "";
             }
        }
    }
    List holdings = record.getVariableFields("989");
    Iterator fieldsIter = holdings.iterator();
    if (holdings != null) {
        DataField holdingField;
        while(fieldsIter.hasNext()) {
             String holding = "";
             holdingField = (DataField) fieldsIter.next();

             if (holdingField != null) {
                 if (holdingField.getSubfield('2') != null) {
                     holding = holdingField.getSubfield('2').getData();
                 }
                 if (holdingField.getSubfield('a') != null) {
                     cl = holdingField.getSubfield('a').getData();
                 }
                 result.add(holding + ":" + cl);
                 cl = "";
             }
        }
    }
    return result;
}

public Set getDOI(Record record) {
    Set result = new LinkedHashSet();
    
    List f024s = record.getVariableFields("024");
    Iterator f024Iter = f024s.iterator();
    if (f024 != null) {
        while (f024Iter.hasNext()) {
            f024 = (DataField) f024Iter.next();
            if (f024 != null) {
                if (f024.getSubfield('2') != null) {
                    if (f024.getSubfield('2').getData().equals("doi")) {
                        if (f024.getSubfield('a') != null) {
                            result.add(f024.getSubfield('a').getData());
                        }
                    }
                }
            }
        }
    }
    return result;
}

public String getDOI(Record record, String first_only) {
    Set dois = getDOI(record);
    if (first_only.equals("first")) {
        if (!dois.isEmpty()) {
           return dois.iterator().next();
        }
    }
    return null;
}

public Set getLastChangedILN(Record record) {
    Set result = new LinkedHashSet();
    String cl = "";

    List holdings = record.getVariableFields("980");
    Iterator fieldsIter = holdings.iterator();
    if (holdings != null) {
        DataField holdingField;
        while(fieldsIter.hasNext()) {
             String holding = "";
             holdingField = (DataField) fieldsIter.next();

             if (holdingField != null) {
                 if (holdingField.getSubfield('2') != null) {
                     holding = holdingField.getSubfield('2').getData();
                 }
                 if (holdingField.getSubfield('z') != null) {
                     cl = holdingField.getSubfield('z').getData();
                     result.add(holding + "@" + cl);
                 }
                 cl = "";
             }
        }
    }
    return result;
}

public Set getAbrufzeichen(Record record) {
    Set result = new LinkedHashSet();
    String cl = "";

    List holdings = record.getVariableFields("995");
    Iterator fieldsIter = holdings.iterator();
    if (holdings != null) {
        DataField holdingField;
        while(fieldsIter.hasNext()) {
             String holding = "";
             holdingField = (DataField) fieldsIter.next();

             if (holdingField != null) {
                 if (holdingField.getSubfield('2') != null) {
                     holding = holdingField.getSubfield('2').getData();
                 }
                 if (holdingField.getSubfield('a') != null) {
                     cl = holdingField.getSubfield('a').getData();
                     result.add(holding + "@" + cl);
                 }
                 cl = "";
             }
        }
    }
    return result;
}

public Set getSelektNeu(Record record) {
    Set result = new LinkedHashSet();
    String cl = "";

    List holdings = record.getVariableFields("998");
    Iterator fieldsIter = holdings.iterator();
    if (holdings != null) {
        DataField holdingField;
        while(fieldsIter.hasNext()) {
             String holding = "";
             holdingField = (DataField) fieldsIter.next();

             if (holdingField != null) {
                 if (holdingField.getSubfield('2') != null) {
                     holding = holdingField.getSubfield('2').getData();
                 }
                 if (holdingField.getSubfield('0') != null) {
                     cl = holdingField.getSubfield('0').getData();
                     result.add(holding + "@" + cl);
                 }
                 cl = "";
             }
        }
    }
    return result;
}

public Set getExemplarKommentar(Record record){
    Set result = new LinkedHashSet();
    String location = "";

    List holdings = record.getVariableFields("980");
    Iterator fieldsIter = holdings.iterator();
    if (holdings != null) {
        DataField holdingField;
        while(fieldsIter.hasNext()) {
             String holding = "";
             holdingField = (DataField) fieldsIter.next();
             if (holdingField != null) {
                 if (holdingField.getSubfield('2') != null) {
                     holding = holdingField.getSubfield('2').getData();
                 }
                 List sigs = holdingField.getSubfields('k');
                 Iterator i = sigs.iterator();
                 while (i.hasNext()) {
                     Subfield sig = (Subfield)i.next();
                     location = sig.getData(); 
                     ilnsig = holding + "@" + location;
                     result.add(ilnsig);
                 }
             }
        }
    }
    return result;
}

public Set getProvIsil(Record record) {
    Set result = new LinkedHashSet();
    String prov = "";
    String isil = "";
    Iterator fieldsIter = record.getVariableFields("561").iterator();
    while(fieldsIter.hasNext()) {
        isil = "";
        prov = "";
        provField = (DataField)fieldsIter.next();
        if (provField != null) {
            if (provField.getSubfield('5') != null) {
                isil = provField.getSubfield('5').getData();
            }
            if (provField.getSubfield('a') != null) {
                prov = provField.getSubfield('a').getData();
            }
            result.add(isil + "@" + prov);
        }
    }
    return result;

}

public Set getSelectkeyBib(Record record){
    Set result = new LinkedHashSet();
    String location = "";

    List holdings = record.getVariableFields("980");
    Iterator fieldsIter = holdings.iterator();
    if (holdings != null) {
        DataField holdingField;
        while(fieldsIter.hasNext()) {
             String holding = "";
             holdingField = (DataField) fieldsIter.next();
             if (holdingField != null) {
                 if (holdingField.getSubfield('2') != null) {
                     holding = holdingField.getSubfield('2').getData() + "@";
                 }
                 if (holdingField.getSubfield('y') != null) {
                     location = holdingField.getSubfield('y').getData();
                     if (location.length() >= 2) {
                         holding = holding + location.substring(1);
                     }
                 }
                 result.add(holding);
             }
        }
    }
    return result;
}

